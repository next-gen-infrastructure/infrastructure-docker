---
repos:
  - id: "/.*/"
    apply_requirements:
      - approved
      - mergeable
      - undiverged
    workflow: terragrunt
    allowed_workflows:
      - terragrunt
#      - terragrunt-run-all
    delete_source_branch_on_merge: true
    repo_locking: false
    post_workflow_hooks:
      - run: |
          if [ ! -d "/tmp/$BASE_REPO_OWNER-$BASE_REPO_NAME-$PULL_NUM" ]; then
            exit 0
          fi
          infracost comment github \
            --repo "${BASE_REPO_OWNER}/${BASE_REPO_NAME}" \
            --pull-request "${PULL_NUM}" \
            --path /tmp/${BASE_REPO_OWNER}-${BASE_REPO_NAME}-${PULL_NUM}/'*'-infracost.json \
            --github-token "${INFRACOST_GITHUB_TOKEN}" \
            --behavior delete-and-new
          rm -rf "/tmp/${BASE_REPO_OWNER}-${BASE_REPO_NAME}-${PULL_NUM}"
          mkdir -p "/tmp/${BASE_REPO_OWNER}-${BASE_REPO_NAME}-${PULL_NUM}"

workflows:
  terragrunt:
    plan:
      steps:
        - env:
            name: TERRAGRUNT_TFPATH
            command: 'echo "terraform${ATLANTIS_TERRAFORM_VERSION}"'
        - env:
            name: TF_IN_AUTOMATION
            value: 'true'
        - env:
            name: TF_PLUGIN_CACHE_MAY_BREAK_DEPENDENCY_LOCK_FILE
            value: 'true'
        - env:
            name: INFRACOST_OUTPUT
            command: 'echo "/tmp/$BASE_REPO_OWNER-$BASE_REPO_NAME-$PULL_NUM/$WORKSPACE-${REPO_REL_DIR//\//-}-infracost.json"'
        - run: |
            mkdir -p "/tmp/${BASE_REPO_OWNER}-${BASE_REPO_NAME}-${PULL_NUM}"

            if ! [[ "${BASE_BRANCH_NAME}" == "production" || "${BASE_BRANCH_NAME}" == "develop" ]]; then
              echo "Environment skipped. Please open a Pull Request to production or develop branch to plan and apply infrastructure changes."
              exit 0
            elif [[ "${REPO_REL_DIR}" == *"prod"* && "${BASE_BRANCH_NAME}" != "production" ]]; then
              echo "Environment skipped. Please open a Pull Request to production branch to plan and apply production changes."
              exit 0
            else
              cp "${HOME}/.terraform.d/terragrunt-core.hcl" "${DIR/\/${REPO_REL_DIR}/}"
              terragrunt plan -input=false -out=$PLANFILE
              terragrunt show -json $PLANFILE > $SHOWFILE
              infracost breakdown \
                --path=$SHOWFILE \
                --format=json \
                --log-level=info \
                --out-file=${INFRACOST_OUTPUT} \
                --project-name=$REPO_REL_DIR
            fi
    apply:
      steps:
        - env:
            name: TERRAGRUNT_TFPATH
            command: 'echo "terraform${ATLANTIS_TERRAFORM_VERSION}"'
        - env:
            name: TF_IN_AUTOMATION
            value: 'true'
        - env:
            name: TF_PLUGIN_CACHE_MAY_BREAK_DEPENDENCY_LOCK_FILE
            value: 'true'
        - run: |
            if ! [[ "${BASE_BRANCH_NAME}" == "production" || "${BASE_BRANCH_NAME}" == "develop" ]]; then
              echo "Environment skipped. Please open a Pull Request to production or develop branch to plan and apply infrastructure changes."
              exit 0
            elif [[ "${REPO_REL_DIR}" == *"prod"* && "${BASE_BRANCH_NAME}" != "production" ]]; then
              echo "Environment skipped. Please open a Pull Request to production branch to plan and apply production changes."
              exit 0
            else
              cp "${HOME}/.terraform.d/terragrunt-core.hcl" "${DIR/\/${REPO_REL_DIR}/}"
              terragrunt terragrunt apply -input=false $PLANFILE
            fi

#  terragrunt-run-all:
#    plan:
#      steps:
#        - run: |
#            mkdir -p "/tmp/${BASE_REPO_OWNER}-${BASE_REPO_NAME}-${PULL_NUM}"
#            if ! [[ "${BASE_BRANCH_NAME}" == "production" || "${BASE_BRANCH_NAME}" == "develop" ]]; then
#              echo "Environment skipped. Please open a Pull Request to production or develop branch to plan and apply infrastructure changes."
#              exit 0
#            elif [[ "${REPO_REL_DIR}" == *"prod"* ]]; then
#              if ! [[ "${BASE_BRANCH_NAME}" == "production" ]]; then
#                echo "Environment skipped. Please open a Pull Request to production branch to plan and apply production changes."
#                exit 0
#              fi
#            else
#              cp "${HOME}/.terraform.d/terragrunt-core.hcl" "${DIR/\/${REPO_REL_DIR}/}"
#              terragrunt run-all plan -out plan.out"
#            fi
#    apply:
#      steps:
#        - run: |
#            if ! [[ "${BASE_BRANCH_NAME}" == "production" || "${BASE_BRANCH_NAME}" == "develop" ]]; then
#              echo "Environment skipped. Please open a Pull Request to production or develop branch to plan and apply infrastructure changes."
#              exit 0
#            elif [[ "${REPO_REL_DIR}" == *"prod"* ]]; then
#              if ! [[ "${BASE_BRANCH_NAME}" == "production" ]]; then
#                echo "Environment skipped. Please open a Pull Request to production branch to plan and apply production changes."
#                exit 0
#              fi
#            else
#              terragrunt run-all apply plan.out --terragrunt-non-interactive
#            fi
